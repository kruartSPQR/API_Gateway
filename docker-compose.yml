services:
  db1:
    image: postgres:16
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '127.0.0.1:5442:5432'
    volumes:
      - postgres-data_userSvc:/var/lib/postgresql/data
  db2:
    image: postgres:16
    environment:
      POSTGRES_DB: authentication_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '127.0.0.1:5443:5432'
    volumes:
      - postgres-data_authSvc:/var/lib/postgresql/data
  db3:
    image: postgres:16
    environment:
      POSTGRES_DB: order_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '127.0.0.1:5444:5432'
    volumes:
      - postgres-data_orderSvc:/var/lib/postgresql/data
  db4:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: payment_service_db
      MONGO_INITDB_ROOT_USERNAME: mongoUser
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    ports:
    - '127.0.0.1:27017:27017'
    volumes:
      - mongo-data_paymentSvc:/data/db
  redis:
    image: redis:7
    ports:
      - '6378:6379'

  app1:
    image: ghcr.io/kruartspqr/userservice_docker_image:latest
    depends_on:
      - db1
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db1:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - '8081:8081'
    restart: unless-stopped

  app2:
    image: ghcr.io/kruartspqr/authservice_docker_image:latest
    depends_on:
      - db2
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db2:5432/authentication_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

    ports:
      - '8082:8082'
    restart: unless-stopped
  app3:
    image: ghcr.io/kruartspqr/orderservice_docker_image:latest
    depends_on:
      - db3
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db3:5432/order_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

    ports:
      - '8083:8083'
    restart: unless-stopped

  app4:
    image: ghcr.io/kruartspqr/paymentservice_docker_image:latest
    depends_on:
      - db4
      - kafka
    environment:
      SPRING_DATA_MONGODB_HOST: db4
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: payment_service_db
      SPRING_DATA_MONGODB_USERNAME: mongoUser
      SPRING_DATA_MONGODB_PASSWORD: mongoPassword
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

    ports:
      - '8084:8084'

    restart: unless-stopped
  app5:
    image: ghcr.io/kruartspqr/apigateway_docker_image:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - app1
      - app2
      - app3
      - app4

    ports:
      - '8080:8080'

    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres-data_userSvc:
  postgres-data_authSvc:
  postgres-data_orderSvc:
  mongo-data_paymentSvc: